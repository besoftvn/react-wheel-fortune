{"version":3,"sources":["../../src/components/ColoredWheel/index.tsx","../../src/index.tsx","App.tsx","index.tsx"],"names":["ColoredWheel","_inheritsLoose","props","_this","state","selectedItem","selectItem","bind","this","Math","floor","random","items","length","setState","setTimeout","_proto","render","wheelContainer","wheelSize","border","WheelColor","wheelVars","fontSize","wheelSpacing","textColor","wheelTurn","duration","timeReset","wheelItem","index","spinning","React","className","style","onClick","map","item","key","Component","BasicWheel","size","spacing","color","borderSize","result","App","createElement","height","src","ReactDOM","document","getElementById"],"mappings":"kYACsB,IAqBDA,EAAaC,Y,QAC9B,WAAYC,G,MAKqC,OAJ7CC,cAAMD,IAAM,MACPE,MAAQ,CACTC,aAAc,MAElBF,EAAKG,WAAaH,EAAKG,WAAWC,K,yHAAK,CAAD,IAAO,E,EANnBN,G,EAAAA,G,sEAO7B,kBAuDA,OAvDA,EAEDK,sBACI,GAAgC,OAA5BE,KAAKJ,MAAMC,aAAuB,CAClC,IAAMA,EAAeI,KAAKC,MAAMD,KAAKE,SAAWH,KAAKN,MAAMU,MAAMC,QAEjEL,KAAKM,SAAS,CAAET,sBAEhBG,KAAKM,SAAS,CAAET,aAAc,OAC9BU,WAAWP,KAAKF,WAAY,MAEnCU,EAEDC,kBACI,IAAQZ,EAAiBG,KAAKJ,MAAtBC,aACAO,EAAUJ,KAAKN,MAAfU,MACFM,EAAsB,CACxB,kBAAqBV,KAAKN,MAAMiB,WAAcX,KAAKN,MAAMiB,UAAY,GAAKX,KAAKN,MAAMkB,QAAU,IAAO,KAAG,KACzG,gBAAiBZ,KAAKN,MAAMmB,YAAc,WAExCC,EAAiB,CACnB,YAAaV,EAAMC,OACnB,kBAAmBR,EACnB,gBAAmBG,KAAKN,MAAMiB,WAAa,KAAG,KAC9C,qBAAwBX,KAAKN,MAAMqB,UAAY,IAAE,KACjD,yBAA4Bf,KAAKN,MAAMsB,cAAgB,IAAE,KACzD,uBAA0BhB,KAAKN,MAAMkB,QAAU,GAAC,KAChD,gBAAiBZ,KAAKN,MAAMmB,YAAc,UAC1C,kBAAmB,QACnB,eAAgBb,KAAKN,MAAMuB,WAAa,OACxC,YAAajB,KAAKN,MAAMwB,WAAa,EACrC,uBAA0BlB,KAAKN,MAAMyB,UAAY,GAAC,IAClD,oBAAuBnB,KAAKN,MAAM0B,WAAa,KAAI,KAEjDC,EAAiB,SAACC,GACpB,MAAO,CACH,YAAaA,IAGfC,EAAiC,OAAjB1B,EAAwB,WAAa,GAE3D,OACI2B,6BAEIA,yBAAKC,UAAU,kBAAkBC,MAAOhB,GACpCc,yBAAKC,UAAS,SAAWF,EAAYG,MAAOZ,EAAWa,QAAS3B,KAAKF,YAChEM,EAAMwB,KAAI,SAACC,EAAMP,GAAK,OACnBE,yBAAKC,UAAU,aAAaK,IAAKR,EAAOI,MAAOL,EAAUC,IACpDO,UAO5B,EA9D6BpC,CAAQ+B,IAAMO,WCInCC,EAAa,SAAH,G,IAAM5B,EAAK,EAALA,MAAO6B,EAAI,EAAJA,KAAMlB,EAAQ,EAARA,SAAUmB,EAAO,EAAPA,QAASC,EAAK,EAALA,MAAOjB,EAAS,EAATA,UAAWC,EAAQ,EAARA,SAAUC,EAAS,EAATA,UAAWgB,EAAU,EAAVA,WAAYC,EAAM,EAANA,OAAQpB,EAAS,EAATA,UACtH,OAAOO,wBAAChC,EAAY,CAClBY,MAAOA,EACPO,UAAWsB,EACXrB,OAAQwB,EACRpB,aAAckB,EACdG,OAAQA,EACRnB,UAAWA,EACXL,WAAYsB,EACZf,UAAWA,EACXD,SAAUA,EACVJ,SAAUA,EACVE,UAAWA,KCfAqB,G,KAlBH,WACV,IAAIlC,EAAe,CACjBoB,IAAAe,cAAA,SAAG,SACDf,IAAAe,cAAA,OACEC,OAAQ,GACRC,IAAI,gHAER,MACA,OACA,SAEF,OAAOjB,IAAAe,cAACP,EAAU,CAChB5B,MAAOA,EACP+B,MAHuB,UAIvBE,OAAQ,MCbZK,IAASjC,OAAOe,IAAAe,cAACD,EAAG,MAAKK,SAASC,eAAe,W","file":"static/js/main.3bd3fb49.chunk.js","sourcesContent":["import React from 'react';\r\nimport './styles.css';\r\n\r\ninterface WheelProps {\r\n    items: any[];\r\n    wheelSize?: number,\r\n    fontSize?: number,\r\n    wheelSpacing?: number,\r\n    WheelColor?: string,\r\n    wheelTurn?: number,\r\n    duration?: number,\r\n    timeReset?: number,\r\n    border?: number,\r\n    result?: number | string,\r\n    textColor?: string,\r\n\r\n}\r\n\r\ninterface WheelState {\r\n    selectedItem: number | null;\r\n}\r\n\r\nexport default class ColoredWheel extends React.Component<WheelProps, WheelState> {\r\n    constructor(props: WheelProps) {\r\n        super(props);\r\n        this.state = {\r\n            selectedItem: null,\r\n        };\r\n        this.selectItem = this.selectItem.bind(this);\r\n    }\r\n\r\n    selectItem() {\r\n        if (this.state.selectedItem === null) {\r\n            const selectedItem = Math.floor(Math.random() * this.props.items.length);\r\n\r\n            this.setState({ selectedItem });\r\n        } else {\r\n            this.setState({ selectedItem: null });\r\n            setTimeout(this.selectItem, 500);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { selectedItem } = this.state;\r\n        const { items } = this.props;\r\n        const wheelContainer: any = {\r\n            '--wheel-border': `${this.props.wheelSize && (this.props.wheelSize + 2 * (this.props.border || 5)) || 210}px`,\r\n            '--wheel-color': this.props.WheelColor || '#da3768',\r\n        }\r\n        const wheelVars: any = {\r\n            '--nb-item': items.length,\r\n            '--selected-item': selectedItem,\r\n            '--wheel-size': `${this.props.wheelSize || 200}px`,\r\n            '--wheel-font-size': `${this.props.fontSize || 10}px`,\r\n            '--wheel-slice-spacing': `${this.props.wheelSpacing || 50}px`,\r\n            '--wheel-border-size': `${this.props.border || 5}px`,\r\n            '--wheel-color': this.props.WheelColor || '#da3768',\r\n            '--neutral-color': 'white',\r\n            '--text-color': this.props.textColor || \"#fff\",\r\n            '--nb-turn': this.props.wheelTurn || 5,\r\n            '--spinning-duration': `${this.props.duration || 5}s`,\r\n            '--reset-duration': `${this.props.timeReset || 0.25}s`,\r\n        };\r\n        const wheelItem: any = (index: any) => {\r\n            return {\r\n                '--item-nb': index,\r\n            }\r\n        };\r\n        const spinning: any = selectedItem !== null ? 'spinning' : '';\r\n\r\n        return (\r\n            <div>\r\n\r\n                <div className=\"wheel-container\" style={wheelContainer}>\r\n                    <div className={`wheel ${spinning}`} style={wheelVars} onClick={this.selectItem}>\r\n                        {items.map((item, index) => (\r\n                            <div className=\"wheel-item\" key={index} style={wheelItem(index)}>\r\n                                {item}\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}","import * as React from 'react'\nimport styles from './styles.module.css'\nimport ColoredWheel from './components/ColoredWheel';\n\ninterface Props {\n  text: string\n}\n\ninterface BasicWheelProps {\n  items: any[];\n  size?: number,\n  fontSize?: number,\n  spacing?: number,\n  color?: string,\n  wheelTurn?: number,\n  duration?: number,\n  timeReset?: number,\n  borderSize?: number,\n  result?: number | string,\n  textColor?: string,\n}\nexport const ExampleComponent = ({ text }: Props) => {\n  return <div className={styles.test}>Example Component hello 123342341: {text}</div>\n}\n\n\nexport const BasicWheel = ({ items, size, fontSize, spacing, color, wheelTurn, duration, timeReset, borderSize, result, textColor }: BasicWheelProps) => {\n  return <ColoredWheel\n    items={items}\n    wheelSize={size}\n    border={borderSize}\n    wheelSpacing={spacing}\n    result={result}\n    wheelTurn={wheelTurn}\n    WheelColor={color}\n    timeReset={timeReset}\n    duration={duration}\n    fontSize={fontSize}\n    textColor={textColor}\n  />\n}\n","import React from 'react'\n\nimport { BasicWheel } from 'react-wheel-fortune'\nimport 'react-wheel-fortune/dist/index.css'\n\nconst App = () => {\n  let items: any[] = [\n    <p>BESOFT\n      <img\n        height={20}\n        src='https://upload.wikimedia.org/wikipedia/commons/thumb/7/73/Flat_tick_icon.svg/1024px-Flat_tick_icon.svg.png' />\n    </p>,\n    \"WIN\",\n    \"LOST\",\n    \"HELLO\"]\n  let wheelColor: string = \"#0092ca\"\n  return <BasicWheel\n    items={items}\n    color={wheelColor}\n    result={3} // index of value in array\n  />\n}\n\nexport default App\n","import './index.css'\n\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}